##인터페이스##
데이터를 주고 받는 정보교환을 위해서는 서로 약속된 규약이 필요함
=사전적 의미: 인터페이스
세가지로 분류
하드웨어 : 전기적 연결장치인 커넥터,프로토콜 등을 의미
소프트웨어 : 메세지 전달방식이나 세부 전달 내용 등을 의미
사용자 : 컴퓨터와 사용자간의 정보 교환을 위한 인터페이스 HCI, UI/UX

송신 - 중계 - 수신
송신 : 인터페이스할 서비스,데이터, 파일을 생성하여 전달, 응답결과를 받아 처리하는 시스템 (소스 시스템)
중계 : 송신과 수신 사이에서 데이터를 변환, 송/수신하고 현황을 모니터링하고 처리흐름, 유량을 제어관리 시스템 (솔루션이 적용됨)
수신 : 수신 받은 서비스 데이터 파일을 받은 후 응답하거나 데이터 또는 파일을 저장하는 시스템 (타깃 시스템)
프로토콜 : HTTP FTP TCP/IP 등
데이터 포맷 : JSON, XML, 데이터 스트림

구현 기술
REST : HTTP가 기본 메소드인 GET/PUT/POST/DELETE 형태로 접근 CURD 와 맵핑
	 모든 정보자원을 URI로 정의해서 접근 특징으론 메시지 레벨의 세밀한 품질관리가 필요하지 않은 경우 사용

데이터 포맷
  1, 전문 형식
        고정길이 방식 : 데이터를 고정길이의 메시지로 정의하고 위치 길이에 따라서 데이터 의미를 구분하는 방식
        가변길이 방식 : 데이터의 크기가 고정되지 않고 키와 값으로 의미를 구분하는 방식
  2, 파일 형식
	많은 양을 전송할 경우 파일에 담아서 전달
  3, 테이블 형식
	DB내의 데이터 그대로 전송 (뷰 테이블이나 select 권한을 주고)

솔루션
  MCI : 유사 공통 인터페이스 통합 가능
  EAI  : 개별 시스템 간 인터페이스 통합
  FEP  :전용선을 통한 인터페이스
  ESB : 다수의 시스템을 복합적으로 처리하여 맞춤형 서비스 제공

설계서
  1, 정의서
	목록 : 시스템에서 구현해야하는 목록을 리스트 형태로 보여줌
	명세 : 상세정보로 데이터 항목이나 형식 길이 암호화 등을 보여줌

설계서 확인
  1. 구성도를 확인
  2. 구현 방법을 확인 
  3. 정의서를 확인  
  4. 인터페이스 특성을 확인 : 유형과 방식 건수 및 주기
  5. 설계서를 확인 : 목록과 명세
  6. 내부 및 외부 모듈 설계서 확인 : 처리 흐름을 정리하고 스펙을 확인한다

인터페이스 표준
  1. 기업 내 인터페이스
	원칙 정의
	구조 표준
  2. 데이터 표준
	1) 개념  	
		용어
		도메인
	2) 데이터 변환 (중계 시스템에서)
		동일할 경우 변환없이 전달
		상이 할 경우 수신시스템에 맞게 변환
	3) 인터페이스 내 표준
  		송 수신 측 모듈 표준 (큰 틀)
		모듈의 데이터 표준  (세부 사항)

인터페이스 표준 확인
  1. 기업 내 정의된 인터페이스 표준 확인
	1) 전사 인터페이스 구성 확인
		사용할 인터페이스 솔루션 확인
		적용대상 솔루션의 상세한 케이스 확인
		적용대상 솔루션에서 사용하는 전사 인터페이스 데이터 구조 확인
  2. 설계서 내 데이터 항목을 표준에 맞게 조정
	1) 표준 준수 여부 확인
		항목 의미 파악
		표준 준수 여부
	2) 표준 준수를 위해 추가 보완 사항 확인
		기능 구현을 위한 추가 보완 사항 파악
	3) 테이터 항목을 최종 확정
  
인터페이스 기능 구현
  1. 인터페이스 개발 환경
	송신 프로그램 : 개발대상 프로그램
	중계 Agent
	어댑터
	수신 프로그램 :
	항목관리,공통기능,시뮬레이터
  2. 인터페이스 구현 방식
	1) 온라인 서비스 호출을 통한 인터페이스 구현 : JSON 및 XML 형식의 데이터포맷 사용 파싱하여 해석
		JSON : 키와 값의 객체 형태로 되어있음
		XML  : 다목적 마크업 언어로 사용자가 태그를 만들어서 요소와 속성이 있다.
	2) DB 테이블을 통한 인터페이스 구현
		수신테이블 송신테이블  각각 데이터 값이 변환되면 프로시저나 트리거를 활용해서 전송하고 저장한다
	3) 배치 프로그램을 통한 인터페이스 구현
		크기가 크거나 건수가 많으면 일괄적으로 배치 프로그램을 통해서 전송함 분할해서도 가능함

인터페이스 기능 구현 확인
  1. 수신 프로그램의 세부 설계서 확인
	1) 수신 프로그램의 컴포넌트 명세서
		모듈 : 독립적(인사관리, 고객관리) 
		컴포넌트 : (월급계산,인사발령,고객정보 확인)
			컴포넌트의 주요 기능 확인
			클래스 설계 내역 확인
	2) 송신 프로그램의 클래스 상세 명세서
  2. 인터페이스를 구현한다.
	1) 솔루션을 통해 인터페이스를 구현한다.
		가) 데이터 항목을 등록한다.
		나) 데이터 항목을 매핑한다.
		다) 데이터 항목을 개발환경에 배포한다.
		라) 송신 프로그램에서 인터페이스를 호출하는 코드를 작성한다.
	2) 데이터 구조체를 직접 생성하여 인터페이스를 구현한다.
		인터페이스 객체를 생성
			객체 생성하기 위한 데이터 선택
			인터페이스 객체를 구현
		인터페이스 전송 결과를 반환받는다.
			송신 측에서 인터페이스 객체를 송신한다.
			수신 측에서 처리 결과를 반환한다.
	3) 인터페이스 테이블을 사용하는 인터페이스를 구현한다.
		송신 측 인터페이스 테이블에 데이터를 쓰고 전송한다.
			송신 측에서 송신 내역을 기록한다.
			송신 측에서 데이터를 전송한다.
		수신 측 인터페이스 테이블에서 데이터를 읽고 처리한다.
			수신 측 인터페이스 테이블에서 데이터를 읽는다.
			수신 측 인터페이스 테이블에서 읽은 데이터를 처리한다.

인터페이스 공통기능 구현
  1. 공통기능의 구성
	예외처리 : 송신 프로그램 내 처리
	응답코드 : 수신 프로그램 내 처리
  2. 주요 보안 취약점
	전송 구간 암호화
		전용선 통신
		VPN : 터널링과 전송 패킷 암호화
  	데이터 암호화
		암호화 알고리즘
		암호화 방식
		암호화 대상
  	시큐어 코딩
#
데이터를 네트웍으로 전송하는 중간에 보안 문제 - 스니핑
피싱사이트 - 스푸핑
#

인터페이스 공통기능 구현 확인
  1. 처리 시 발생 가능한 예외에 대한 처리방안을 정의
	데이터 통신을 사용하는 인터페이스 동작 간 실패 시 예이처리 방안을 정의
		인터페이스 객체 송신 시 예외처리 방안을 정의
			에러메시지 확인, 404 서버상태
			정합성 오류 크기를 체크하는 기능 추가
			논리적 결함 수정, 테스트 실시
		인터페이스 객체 수신 시 예외처리 방안을 정의
			입력 대기 큐 통해서 쌓아놓고 순차적 처리
			정합성 체크 특수문자를 오류 안나는 문자로 대체
			결함 수정 테스트 실시, 예외사항이 들어오지 않도록 송신 측 프로그램 수정
  	인터페이스 테이블을 사용하는 인터페이스 처리 시 예외처리 방안을 정의
		송수신 인터페이스 테이블에서 인터페이스 실패 시 예외처리 방안을 정의
	 	인터페이스 예외 발생 시 예외 케이스별 오류 코드를 정의
  2. 인터페이스 예외처리 적용
	데이터 통신을 사용한 인터페이스에서 예외를 처리한다.
		송신 측에서 예외를 처리
			동기,비동기 방식을 통해 콜백방식
		수신 측에서 예외를 처리
			트라이캐치
	테이블을 사용하여 예외처리
		송신 예외처리 : 유형에 따른 코드와 원일을 송신 테이블에 입력
		수신 예외처리 : 코드와 사유를 수신 테이블에 기록
  3. 보안 취약점을 분석
	구현 현황을 분석
	각 구간 보안 취약점 분석
  4. 취약점 근거로 보안 기능 적용
	네트워크
	애플리케이션
	데이터베이스

정의서(목록) : 송수신 시스템의 정보, 인터페이스의 특성, 유형,기술
명세서(상세내용) : 송수신되는 데이터의 항목,형식,길이, 암호화 처리 여부 등

데이터 표준 : 형식 , 기준 및 전송방법

JSON : 속성 값 형태
XML : 마크업 언어, 태그형태

컴포넌트 명세서 항목
컴포넌트id, 명, 개요, 클래스명 ,인터페이스명
모듈 명세서 항목
인터페이스id, 명, 메소드명, 개요 사전조건 사후조건

온라인 서비스 호출
json xml
테이블방식
배치프로그램 

테이블 방식
시스템간 데이터교환
송신 테이블 프로시저 트리거
수신측 리드 하고 처리

에러 404 서버,네트워크
400 500 프로그램 오류
송신 에러 정합성체크
수신 에러 파싱 체크

수신은 객체 생성 안하고 받아서 파싱 후 추출
수신 이벤트 발생시 수신 받기.
데이터 파싱 후 데이터 추출
데이터 항목 검증

스니핑 중간 감청
스푸핑 가짜를 진짜처럼 믿게 만듬 피싱사이트

인터페이스 보안
에러정보 노출X
복잡한 코드는 유지보수 어려움
입력 데이터 검증 시 sql 인젝션 고려
db자체의 플러그인 이용해서 암호화 할 경우 시스템 통합 시 app변경 불필요 